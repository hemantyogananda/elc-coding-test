{"version":3,"sources":["logo.svg","components/TopMenu/index.js","redux/actions/topMenu/index.js","components/Header/index.js","redux/actions/product/index.js","redux/actions/product/types.js","components/Sidebar/index.js","components/Product/index.js","components/MainContainer/index.js","App.js","serviceWorker.js","redux/reducers/topMenu/index.js","redux/reducers/product/index.js","redux/reducers/index.js","redux/store/index.js","index.js"],"names":["module","exports","connect","state","dispatch","getMenu","type","data","props","className","topMenu","map","item","index","key","href","Header","_getProducts","_getFilteredProducts","applyFilter","param","a","query","buildQuery","console","log","filteredData","filterData","products","filter","keys","undefined","includes","Sidebar","useDispatch","product","useSelector","obj","useState","categoryFilter","setCategoryFilter","setFilter","useEffect","tempCat","axios","method","url","then","res","x","parentcategoryid","t","Id","id","Category","category","SubCategory","y","Name","push","catch","err","checkboxchange","e","categories","findIndex","target","value","checked","slice","concat","length","tmpFilter","categoryId","actions","subitem","ind","name","onChange","style","color","Product","filteredProduct","productList","categoryid","imageSrc","productimg","productname","price","ex","src","MainContainer","React","Component","App","Boolean","window","location","hostname","match","initialState","rootReducer","combineReducers","action","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.eac74bf6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {getTopMenu} from \"../../redux/actions/topMenu\";\r\nimport \"../TopMenu/_topmenu.scss\";\r\n\r\n//const menu = ['Home', 'Women', 'Men', 'Kids', 'Best Seller'];\r\n\r\nconst TopMenu = (props) =>{\r\n    \r\n    return (\r\n    <>\r\n        <header className=\"menuHeader\">\r\n            <div className=\"container-fluid\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-xl-12 col-lg-12\">\r\n                        <nav className=\"menu\">\r\n                            <ul>\r\n                                {props.state.topMenu.map((item, index) => (\r\n                                    <li key={index}>\r\n                                        <a href=\"#\">{item}</a>\r\n                                    </li>\r\n                                ))}\r\n\r\n                            </ul>\r\n                        </nav>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </header>\r\n    </>\r\n)}\r\n\r\nconst mapStateToProps = (state)=>{\r\n\r\n    return {state}\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch)=> {\r\n    return {\r\n        getMenu : dispatch(getTopMenu())\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(TopMenu);","export const getTopMenu = ()=>{\r\n\r\n    return {\r\n        type :'Menu',\r\n        data :['Holiday','Whats New','Products','Bestseleres','Goodbyes','Stores','Inspiration']\r\n    }\r\n\r\n}","import React from \"react\";\r\nimport {useSelector} from \"react-redux\";\r\nimport TopMenu from \"../TopMenu\"\r\nimport \"./_header.scss\"\r\nconst Header = () =>{ \r\n  \r\n  return (\r\n  \r\n  <>\r\n    <header className=\"header\">\r\n      <div className=\"container-fluid\">\r\n        <div className=\"row\">\r\n          <div className=\"col-xl-3 col-lg-2\">\r\n            <div className=\"header__logo\">\r\n              <font>Maccosmetics</font>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-xl-6 col-lg-7\">\r\n\r\n            <div className=\"input-group mt-3\">\r\n              <div className=\"input-group-prepend\">\r\n                <select className=\"form-control btn btn-success dropdown-toggle\">\r\n                  <option>ALL</option>\r\n                  <option>Men</option>\r\n                  <option>Women</option>\r\n                  <option>Kids</option>\r\n                </select>\r\n\r\n              </div>\r\n\r\n              <input type=\"text\" className=\"form-control\" />\r\n\r\n              <div className=\"input-group-append\">\r\n                <button className=\"btn btn-success\">\r\n                  <i className=\"fa fa-search\"></i>\r\n                </button>\r\n              </div>\r\n            </div>\r\n\r\n          </div>\r\n          <div className=\"col-lg-3\">\r\n            <div className=\"header__right\">\r\n              <div className=\"header__right__auth\">\r\n\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n        </div>\r\n      </div>\r\n    </header>\r\n    <TopMenu/>\r\n  </>\r\n)}\r\n\r\nexport default Header;","import * as actionTypes from \"./types\";\r\nimport axios from \"axios\";\r\n\r\n\r\nexport const getProductCategories = () => async (dispatch) => {\r\n    let tempCat = [];\r\n    await axios({\r\n        method: \"get\",\r\n        url: \"http://localhost:5000/product/api/getCategories\"\r\n    }).then((res) => {\r\n        console.log(\"RESPONSE FROM API\", res.data);\r\n\r\n        let parentCat = res.data.data\r\n            .filter(x => x.parentcategoryid === null);\r\n\r\n\r\n\r\n        parentCat.map((item) => {\r\n            let t = {\r\n                Id: item.id,\r\n                Category: item.category,\r\n                SubCategory: res.data.data\r\n                    .filter(x => x.parentcategoryid === item.id)\r\n                    .map(y => {\r\n                        return {\r\n                            Id: y.id,\r\n                            Name: y.category\r\n                        }\r\n                    })\r\n            }\r\n            return tempCat.push(t);\r\n\r\n        })\r\n    }).catch((err) => {\r\n        console.log(\"RESPONSE ERROR\", err);\r\n    })\r\n\r\n    dispatch({\r\n        type: actionTypes.PRODUCT_CATEGORY,\r\n        data: tempCat\r\n    })\r\n}\r\n\r\nexport const getProducts = () => async (dispatch) => {\r\n\r\n    await axios({\r\n        method: 'get',\r\n        url: 'http://localhost:5000/product/api/getProducts'\r\n    }).then(res => {\r\n\r\n        try {\r\n            let productList = res.data.data.map(item => {\r\n                return {\r\n                    Id: item.id,\r\n                    categoryId: item.categoryid,\r\n                    imageSrc: `http://localhost:5000/${item.productimg}`,\r\n                    name: item.productname,\r\n                    price: item.price\r\n\r\n                }\r\n            })\r\n            dispatch(_getProducts(productList));\r\n            dispatch(_getFilteredProducts(productList));\r\n        }\r\n        catch (ex) {\r\n            console.log(ex);\r\n        }\r\n\r\n\r\n    }).catch(err => {\r\n        console.log(\"catch err\", err)\r\n    })\r\n\r\n}\r\n\r\nexport const _getProducts = (data) => {\r\n    return {\r\n        type: actionTypes.PRODUCT,\r\n        data\r\n    }\r\n}\r\n\r\nexport const _getFilteredProducts = (data) => {\r\n    return {\r\n        type: actionTypes.FILTER_PRODUCT,\r\n        data\r\n    }\r\n}\r\n\r\nexport const applyFilter = (param, data) => async (dispatch) => {\r\n\r\n    let query = buildQuery(param);\r\n    console.log(\"Build Query\", query);\r\n    \r\n    let filteredData = filterData(data.products,query);\r\n    dispatch(_getFilteredProducts(filteredData));\r\n\r\n}\r\n\r\nconst buildQuery = (filter) => {\r\n    let query = {};\r\n    for (let keys in filter) {\r\n        query[keys] = filter[keys];\r\n    }\r\n    return query;\r\n}\r\n\r\n\r\nconst filterData=(data,query)=>{\r\n\r\n    const filteredData = data.filter(item=>{\r\n            for(let keys in query){\r\n\r\n                if(query[keys]===undefined) return false;\r\n                else if(!query[keys].includes(item[keys])) return false;\r\n\r\n            }\r\n            return true;\r\n\r\n    });\r\n\r\n    return filteredData;\r\n\r\n}\r\n","export const PRODUCT_CATEGORY =\"PRODUCT_CATEGORY\";\r\nexport const PRODUCT = \"PRODUCT\";\r\nexport const FILTER_PRODUCT=\"FILTER_PRODUCT\";","import React, { useEffect, useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport * as actions from \"../../redux/actions/product/index\";\r\nimport \"./_sidebar.scss\";\r\n\r\nconst Sidebar = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { product } = useSelector((obj) => obj);\r\n    const [categoryFilter, setCategoryFilter] = useState([]);\r\n    const [filter, setFilter] = useState({});\r\n\r\n    useEffect(() => {\r\n        dispatch(actions.getProductCategories());\r\n    }, [])\r\n\r\n    const applyFilter = (item) => {\r\n\r\n\r\n        let tmpFilter = {\r\n            ...filter,\r\n            categoryId: item.map(x => x.Id)\r\n        }\r\n\r\n        setFilter(tmpFilter);\r\n        \r\n        if(tmpFilter.categoryId.length>0)\r\n        dispatch(actions.applyFilter(tmpFilter, product));\r\n        else\r\n        dispatch(actions.applyFilter(null, product))\r\n        \r\n        console.log(tmpFilter);\r\n    }\r\n\r\n    const checkboxchange = (e, item) => {\r\n\r\n        let categories = [...categoryFilter];\r\n\r\n        let index = categories.findIndex(item => item.Id >= e.target.value);\r\n        console.log(\"INDEX\", index);\r\n\r\n        if (!e.target.checked) {\r\n            categories = categories.slice(0, index).concat(categories.slice(index + 1, categories.length));\r\n\r\n        }\r\n        else if (e.target.checked) {\r\n            categories.push(item);\r\n        }\r\n        setCategoryFilter(categories);\r\n\r\n      \r\n            applyFilter(categories);\r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"sidebar_category\">\r\n                <div className=\"section-title\">\r\n                    <h4>Categories</h4>\r\n                </div>\r\n                {\r\n                    product.categories.map((item, index) => {\r\n\r\n                        return (\r\n                            <div className=\"category_accordian\" key={index}>\r\n                                <div className=\"accordian\">\r\n                                    <div className=\"card\">\r\n                                        <div className=\"card-heading\">\r\n                                            <a>{item.Category}</a>\r\n                                        </div>\r\n                                        <div className=\"card-body\">\r\n                                            <ul>\r\n                                                {\r\n                                                    item.SubCategory.map((subitem, ind) => (\r\n                                                        <li key={ind}>\r\n                                                            {/* <a href={null} onClick={()=>applyFilter(subitem)}>{subitem.Name} </a> */}\r\n                                                            <div className=\"form-check\">\r\n                                                                <input type=\"checkbox\" value={subitem.Id} name={subitem.Name} className=\"form-check-input\" onChange={(e) => checkboxchange(e, subitem)}></input>\r\n                                                                <label className=\"form-check-label\" style={{ color: '#000' }} >{subitem.Name}</label>\r\n                                                            </div>\r\n                                                        </li>\r\n\r\n                                                    ))\r\n                                                }\r\n                                            </ul>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Sidebar;\r\n\r\n","import React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport * as actions from \"../../redux/actions\";\r\n\r\nimport \"./_product.scss\";\r\n\r\n// const products = [\r\n//     require(\"../../assets/img/shop/shop-1.jpg\"),\r\n//     require(\"../../assets/img/shop/shop-2.jpg\"),\r\n//     require(\"../../assets/img/shop/shop-3.jpg\"),\r\n//     require(\"../../assets/img/shop/shop-4.jpg\"),\r\n//     require(\"../../assets/img/shop/shop-5.jpg\"),\r\n// ]\r\n\r\nconst Product = () => {\r\n    const dispatch = useDispatch();\r\n    const { product: { products,filteredProduct } } = useSelector((obj) => obj);\r\n\r\n    useEffect(() => {\r\n        dispatch(actions.getProducts());\r\n    }, [])\r\n\r\n    \r\n\r\n    \r\n    return (\r\n        <div className=\"row\">\r\n            {filteredProduct.map((item, index) => (\r\n                <div className=\"col-lg-4 col-md-6\">\r\n                    <div className=\"product__item\">\r\n                        <div className=\"product__item__pic\">\r\n                            <img className=\"product__item__pic\" src={item.imageSrc} />\r\n                            <ul className=\"product__hover\">\r\n                                <li>\r\n                                    <a href={item.imageSrc}>\r\n                                        \r\n                                    </a>\r\n                                </li>\r\n\r\n                            </ul>\r\n                        </div>\r\n                        <div className=\"product__item__text\">\r\n                            <h6>\r\n                                <a href=\"#\">{item.name}</a>\r\n                            </h6>\r\n                            <div className=\"product__price\">{item.price}</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Product;","import React from \"react\";\r\nimport Sidebar from \"../Sidebar\";\r\nimport Product from \"../Product\";\r\nimport \"../MainContainer/_maincontainer.scss\";\r\n\r\nclass MainContainer extends React.Component{\r\n    render(){\r\n        return(\r\n            <section className=\"main-container\">\r\n                <div className=\"container-fluid\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-lg-2 col-md-3 col-sm-4\">\r\n                            <Sidebar/>\r\n                        </div>\r\n                        <div className=\"col-lg-10 col-md-9 col-sm-8\">\r\n                            <Product/>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MainContainer;","import React from 'react';\nimport logo from './logo.svg';\nimport Header from \"./components/Header\";\nimport MainContainer from \"./components/MainContainer\";\nimport './App.css';\n\nfunction App() {\n  return (\n    <>\n      <Header />\n      <MainContainer />\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const initialState = [];\r\n\r\nexport const topMenu = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case \"Menu\":\r\n            return action.data;\r\n        default:\r\n           return state;\r\n    }\r\n\r\n\r\n}","import * as actionTypes from \"../../actions/product/types\";\r\n\r\nconst initialState = {\r\n    categories: [],\r\n    products: [],\r\n    filteredProduct:[]\r\n}\r\n\r\nexport const product = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.PRODUCT_CATEGORY:\r\n            return {\r\n                ...state,\r\n                categories: action.data\r\n            }\r\n        case actionTypes.PRODUCT:\r\n            return {\r\n                ...state,\r\n                products: action.data\r\n            }\r\n          case actionTypes.FILTER_PRODUCT:\r\n              return{\r\n                  ...state,\r\n                  filteredProduct: action.data\r\n              }  \r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers } from \"redux\";\r\nimport { topMenu } from \"./topMenu\";\r\nimport {product } from \"./product\";\r\n\r\nconst rootReducer = combineReducers({\r\n    topMenu,\r\n    product\r\n})\r\n\r\nexport default rootReducer;","import rootReducer from \"../reducers\";\r\nimport {createStore,applyMiddleware} from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nconst store = createStore(rootReducer,applyMiddleware(thunk));\r\n\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}